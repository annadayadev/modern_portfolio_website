$primary-color: #444;
$secondary-color: #eece1a;
$show-home-image: true;
$home-image: url(../img/background.jpg);
$background-opacity: 0.9;

//We want to create a function that will automatically change the color of the text once the background color changes, and it needs to be a function not a mixins because we want something to return from it, and if we want a return then we need to use function - we added it right above the media query mixins

//basically a function, the easeout is the -> //first parameter is what you wanna transition, all means anything that is transitionable, next parameter is the time it takes, and the next is the motion
@mixin easeOut {
  transition: all 0.5s ease-out;
}

@mixin background {
  //if show-home-image is true then it will look for the property #bg-img and we will set the background image into the property we set up at the top with the image.
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;

      //because we want this to be inside the bg-img - from overlay we changed it into after

      //when we use before and after, we need to add content variable - after removing the overlay from our html, you can see that we will have the same result - this is called pseudo element, something that is not in the html but the css treats it like one.
      &:after {
        content: "";
        //we want this to cover the whole body
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1; //now the text have move upfront

        //we want to use rgba (red green blue alpha), it allows us to have a color, but also to have an opacity so we can see through it, so now we have both gray background and as well as the opacity needed to have a good mix -- but don't forget to edit the z-index, remember the higher the number the closer it is to you. so in this overlay, we want to push it behind, so let's set it to negative number to make sure it will push back.
        background: rgba($primary-color, $background-opacity);
      }
    }
  }
}

//We want to create a function that will automatically change the color of the text once the background color changes, and it needs to be a function not a mixins because we want something to return from it, and if we want a return then we need to use function - and then go to main.scss on the body styling and set body color to set-text-color

//Set text color
@function set-text-color($color) {
  //if the lightness of the color we pass in is greater than 40,
  @if (lightness($color) > 40) {
    @return #000;
  } @else {
    @return #fff;
  }
}

//Media Query Mixins

//small
@mixin mediaSm {
  @media screen and (max-width: 500px) {
    //any css we put in here will only apply if the screen is 500px or less
    @content;
  }
}

//medium
@mixin mediaMd {
  @media screen and (max-width: 768px) {
    //any css we put in here will only apply if the screen is 500px or less
    @content;
  }
}

//large
@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    //any css we put in here will only apply if the screen is 500px or less
    @content;
  }
}

//extra large
@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    //any css we put in here will only apply if the screen is 500px or less
    @content;
  }
}
